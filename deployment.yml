apiVersion: v1
kind: Namespace
metadata:
    name: ##APP_NAME##-ns
    labels:
        name: ##APP_NAME##-ns
---
apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
  name: azure-tls
  namespace: ##APP_NAME##-ns
spec:
  provider: azure
  secretObjects:
  - secretName: ingress-tls-csi
    type: kubernetes.io/tls
    data:
    - objectName: "##CERT_NAME##"
      key: tls.key
    - objectName: "##CERT_NAME##"
      key: tls.crt
  parameters:
#    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    userAssignedIdentityID: "##CLIENT_ID##"
    keyvaultName: "##AKV_NAME##"
    objects: |
      array:
        - |
          objectName: ##CERT_NAME##
          objectType: secret
    tenantId: "##TENANT_ID##"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ##APP_NAME##-deployment
  namespace: ##APP_NAME##-ns
spec:
  selector:
    matchLabels:
      app: ##APP_NAME##
  replicas: ##REPLICA_COUNT##
  template:
    metadata:
      labels:
        app: ##APP_NAME##
    spec:
      containers:
      - name: ##APP_NAME##
        image: ##ACR_ID##.azurecr.io/##imageName##:##BuildId##
        volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"
            readOnly: true
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-secret"
      imagePullSecrets:
      - name: ##acr-secret-name##
---
apiVersion: v1
kind: Service
metadata:
  name: ##APP_NAME##-service
  namespace: ##APP_NAME##-ns
spec:
#  type: LoadBalancer
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 5000
  - name: https
    port: 443
    protocol: TCP
    targetPort: 5000
  selector:
    app: ##APP_NAME##
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ##APP_NAME##-ingress
  namespace: ##APP_NAME##-ns
spec:
  tls:
  - hosts:
    - "##HOST_NAME##"
    secretName: ingress-tls-csi
  rules:
  - host: "##HOST_NAME##"
    http:
#  - http:
      paths:
      - path: /api/
        pathType: ImplementationSpecific
        backend:
          service:
            name: ##APP_NAME##-service
            port:
              number: 80